{"version":3,"sources":["../src/base-dotlottie-react.tsx","../src/dotlottie.tsx","../src/dotlottie-worker.tsx","../src/index.ts"],"names":["BaseDotLottieReact","animationId","autoplay","backgroundColor","className","createDotLottie","data","dotLottieRefCallback","layout","loop","mode","playOnHover","renderConfig","segment","speed","src","style","themeData","themeId","useFrameInterpolation","workerId","props","dotLottie","setDotLottie","useState","canvasRef","useRef","dotLottieRef","dotLottieRefCallbackRef","config","configRef","useEffect","setCanvasRef","useCallback","canvas","dotLottieInstance","handlePlayOnHover","event","jsx","DotLottie","DotLottieReact","createDotLottieWorker","DotLottieWorker","DotLottieWorkerReact","setWasmUrl","url"],"mappings":"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","file":"index.js","sourcesContent":["/* eslint-disable no-warning-comments */\n'use client';\n\nimport type { Config, DotLottie, DotLottieWorker } from '@lottiefiles/dotlottie-web';\nimport { useState, useEffect, useCallback, useRef, type ComponentProps, type RefCallback } from 'react';\nimport type { JSX } from 'react';\n\nexport type BaseDotLottieProps<T extends DotLottie | DotLottieWorker> = Omit<Config, 'canvas'> &\n  ComponentProps<'canvas'> & {\n    animationId?: string;\n    /**\n     * A function that creates a `DotLottie` or `DotLottieWorker` instance.\n     */\n    createDotLottie: (config: T extends DotLottieWorker ? Config & { workerId?: string } : Config) => T;\n    /**\n     * A callback function that receives the `DotLottie` or `DotLottieWorker` instance.\n     *\n     * @example\n     * ```tsx\n     * const [dotLottie, setDotLottie] = useState<DotLottie | null>(null);\n     *\n     * <DotLottieReact\n     *   dotLottieRefCallback={setDotLottie}\n     * />\n     * ```\n     */\n    dotLottieRefCallback?: RefCallback<T | null>;\n    /**\n     * @deprecated The `playOnHover` property is deprecated.\n     * Instead, use the `onMouseEnter` and `onMouseLeave` events to control animation playback.\n     * Utilize the `dotLottieRefCallback` to access the `DotLottie` instance and invoke the `play` and `pause` methods.\n     *\n     * Example usage:\n     * ```tsx\n     * const [dotLottie, setDotLottie] = useState<DotLottie | null>(null);\n     *\n     * <DotLottieReact\n     *   dotLottieRefCallback={setDotLottie}\n     *   onMouseEnter={() => dotLottie?.play()}\n     *   onMouseLeave={() => dotLottie?.pause()}\n     * />\n     * ```\n     */\n    playOnHover?: boolean;\n    themeData?: string;\n    workerId?: T extends DotLottieWorker ? string : undefined;\n  };\n\nexport const BaseDotLottieReact = <T extends DotLottie | DotLottieWorker>({\n  animationId,\n  autoplay,\n  backgroundColor,\n  className,\n  createDotLottie,\n  data,\n  dotLottieRefCallback,\n  layout,\n  loop,\n  mode,\n  playOnHover,\n  renderConfig,\n  segment,\n  speed,\n  src,\n  style,\n  themeData,\n  themeId,\n  useFrameInterpolation,\n  workerId,\n  ...props\n}: BaseDotLottieProps<T> & {\n  createDotLottie: (config: T extends DotLottieWorker ? Config & { workerId?: string } : Config) => T;\n}): JSX.Element => {\n  const [dotLottie, setDotLottie] = useState<T | null>(null);\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const dotLottieRef = useRef<T | null>(null);\n  const dotLottieRefCallbackRef = useRef<RefCallback<T | null> | undefined>(dotLottieRefCallback);\n\n  const config: Omit<Config, 'canvas'> & {\n    workerId?: T extends DotLottieWorker ? string : undefined;\n  } = {\n    speed,\n    mode,\n    loop,\n    useFrameInterpolation,\n    segment,\n    backgroundColor,\n    autoplay,\n    themeId,\n    workerId,\n    src,\n    data,\n    layout,\n    renderConfig,\n    animationId,\n  };\n\n  const configRef = useRef<Omit<BaseDotLottieProps<T>, 'createDotLottie' | 'dotLottieRefCallback'> | undefined>(config);\n\n  dotLottieRefCallbackRef.current = dotLottieRefCallback;\n  dotLottieRef.current = dotLottie;\n  configRef.current = config;\n\n  useEffect(() => {\n    if (typeof dotLottieRefCallbackRef.current === 'function' && dotLottie) {\n      dotLottieRefCallbackRef.current(dotLottie);\n    }\n  }, [dotLottie]);\n\n  const setCanvasRef = useCallback((canvas: HTMLCanvasElement | null) => {\n    canvasRef.current = canvas;\n\n    if (canvas) {\n      const dotLottieInstance = createDotLottie({\n        ...configRef.current,\n        canvas,\n      });\n\n      setDotLottie(dotLottieInstance as T);\n    } else {\n      dotLottie?.destroy();\n      setDotLottie(null);\n    }\n  }, []);\n\n  useEffect(() => {\n    const handlePlayOnHover = (event: MouseEvent): void => {\n      if (!playOnHover) return;\n\n      if (event.type === 'mouseenter') {\n        dotLottieRef.current?.play();\n      }\n\n      if (event.type === 'mouseleave') {\n        dotLottieRef.current?.pause();\n      }\n    };\n\n    canvasRef.current?.addEventListener('mouseenter', handlePlayOnHover);\n    canvasRef.current?.addEventListener('mouseleave', handlePlayOnHover);\n\n    return () => {\n      canvasRef.current?.removeEventListener('mouseenter', handlePlayOnHover);\n      canvasRef.current?.removeEventListener('mouseleave', handlePlayOnHover);\n    };\n  }, [playOnHover]);\n\n  useEffect(() => {\n    return () => {\n      if (dotLottie) {\n        dotLottie.destroy();\n        setDotLottie(null);\n      }\n    };\n  }, [dotLottie]);\n\n  useEffect(() => {\n    dotLottieRef.current?.setSpeed(speed ?? 1);\n  }, [speed]);\n\n  useEffect(() => {\n    dotLottieRef.current?.setMode(mode ?? 'forward');\n  }, [mode]);\n\n  useEffect(() => {\n    dotLottieRef.current?.setLoop(loop ?? false);\n  }, [loop]);\n\n  useEffect(() => {\n    dotLottieRef.current?.setUseFrameInterpolation(useFrameInterpolation ?? true);\n  }, [useFrameInterpolation]);\n\n  useEffect(() => {\n    if (typeof segment?.[0] === 'number' && typeof segment[1] === 'number') {\n      dotLottieRef.current?.setSegment(segment[0], segment[1]);\n    } else {\n      // TODO: implement it for worker\n      // dotLottieRef.current?.resetSegment();\n    }\n  }, [segment]);\n\n  useEffect(() => {\n    dotLottieRef.current?.setBackgroundColor(backgroundColor ?? '');\n  }, [backgroundColor]);\n\n  useEffect(() => {\n    dotLottieRef.current?.setRenderConfig(renderConfig ?? {});\n  }, [JSON.stringify(renderConfig)]);\n\n  useEffect(() => {\n    if (typeof data !== 'string' && typeof data !== 'object') return;\n\n    dotLottieRef.current?.load({\n      data,\n      ...configRef.current,\n    });\n  }, [data]);\n\n  useEffect(() => {\n    if (typeof src !== 'string') return;\n\n    dotLottieRef.current?.load({\n      src,\n      ...configRef.current,\n    });\n  }, [src]);\n\n  useEffect(() => {\n    dotLottieRef.current?.setMarker(props.marker ?? '');\n  }, [props.marker]);\n\n  useEffect(() => {\n    dotLottieRef.current?.loadAnimation(animationId ?? '');\n  }, [animationId]);\n\n  useEffect(() => {\n    if (typeof themeId === 'string') {\n      dotLottieRef.current?.setTheme(themeId);\n    } else {\n      // TODO: implement it for worker\n      // dotLottieRef.current?.resetTheme();\n    }\n  }, [themeId]);\n\n  useEffect(() => {\n    dotLottieRef.current?.setThemeData(themeData ?? '');\n  }, [themeData]);\n\n  useEffect(() => {\n    dotLottieRef.current?.setLayout(layout ?? {});\n  }, [layout?.fit, layout?.align && layout.align[0], layout?.align && layout.align[1]]);\n\n  return (\n    <div\n      className={className}\n      {...(!className && {\n        style: {\n          width: '100%',\n          height: '100%',\n          lineHeight: 0,\n          ...style,\n        },\n      })}\n    >\n      <canvas\n        ref={setCanvasRef}\n        style={{\n          width: '100%',\n          height: '100%',\n        }}\n        {...props}\n      />\n    </div>\n  );\n};\n","'use client';\n\nimport type { Config } from '@lottiefiles/dotlottie-web';\nimport { DotLottie } from '@lottiefiles/dotlottie-web';\nimport type { JSX } from 'react';\n\nimport type { BaseDotLottieProps } from './base-dotlottie-react';\nimport { BaseDotLottieReact } from './base-dotlottie-react';\n\nexport type DotLottieReactProps = Omit<BaseDotLottieProps<DotLottie>, 'createDotLottie'>;\n\nconst createDotLottie = (config: Config): DotLottie => new DotLottie(config);\n\nexport const DotLottieReact = (props: DotLottieReactProps): JSX.Element => {\n  return <BaseDotLottieReact {...props} createDotLottie={createDotLottie} />;\n};\n","'use client';\n\nimport type { Config } from '@lottiefiles/dotlottie-web';\nimport { DotLottieWorker } from '@lottiefiles/dotlottie-web';\n\nimport { BaseDotLottieReact } from './base-dotlottie-react';\nimport type { BaseDotLottieProps } from './base-dotlottie-react';\n\nexport type DotLottieWorkerReactProps = Omit<BaseDotLottieProps<DotLottieWorker>, 'createDotLottie'>;\n\nconst createDotLottieWorker = (config: Config & { workerId?: string }): DotLottieWorker => new DotLottieWorker(config);\n\nexport const DotLottieWorkerReact = (props: DotLottieWorkerReactProps): JSX.Element => {\n  return <BaseDotLottieReact {...props} createDotLottie={createDotLottieWorker} />;\n};\n","'use client';\n\nimport { DotLottie, DotLottieWorker } from '@lottiefiles/dotlottie-web';\n\nexport * from './dotlottie';\nexport type * from '@lottiefiles/dotlottie-web';\nexport * from './dotlottie-worker';\n\nexport const setWasmUrl = (url: string): void => {\n  DotLottieWorker.setWasmUrl(url);\n  DotLottie.setWasmUrl(url);\n};\n"]}